c
@listings.filter_by_range(filter_params).count
@listings.filter_by_range(filter_params)
c
@listings.filter_by_range(filter_params)
@listings.count
@listings
c
params[:listings].gsub(/\[{1}(.+)\]{1}/, "\1")
params[:listings]
params[:listings].gsub(/\[{1}(.+)\]{1}/, "\1")
params[:listings].gsub(/\[{1}(.+)\]{1}/, \1)
params[:listings].gsub(/\[{1}(.+)\]{1}/, "dd")
params[:listings].match(/\[{1}(.+)\]{1}/)
params[:listings].gsub(/\[{1}(.+)\]{1}/,$1)
params[:listings].gsub!(/\[{1}(.+)\]{1}/,$1)
params[:listings].class
params[:listings]
c
params[:listings].gsub!(/\[{1}(.+)\]{1}/,$1)
params[:listings].match(/\[{1}(.+)\]{1}/)
params[:listings]
params[:listings].gsub(/\[{1}(.+)\]{1}/,$1)
params[:listings].gsub(/\[{1}(.+)\]{1}/,$1).split(', ')
params[:listings]
c
@listings.price_range(250,300)
@listings.price_range(200,250)
@listings = Listing.where(id: 3..5)
@listing.price_range(2,800)
@listing.where(id: 3)
@listing = Listing.all
params[:listings].gsub(/\[{1}(.+)\]{1}/,$1).split(', ')
params[:listings].gsub(/\[{1}(.+)\]{1}/,$1).split(',')
params[:listings].gsub(/\[{1}(.+)\]{1}/,$1)
params[:listings].gsub(/\[{1}(.+)\]{1}/,"$1")
params[:listings].match(/\[{1}(.+)\]{1}/)
params[:listings].match(/[{1}(.+)]{1}/)
params[:listings].gsub(/[{1}(.+)]{1}/,"$1")
params[:listings].to_a
params[:listings]
c
params[:listings]
params[:listings].class
c
params[:listings].class
params[:listings]
c
params
c
params[:listings]
c
params[:listings]
c
params[:listings]
c
@listings.count
@listings
c
params[:listings]
c
params[:listings]
c
params[:listings]
c
params[:listings].class
params[:listings]
c
params[:listings]
c
params[:listings].class
params[:listings].all
params[:listings]
params
c
@listings
params
c
a.length
a.lengt
a = Listing.search("ba", match: :word_start)
a.length
a = Listing.search("ba")
a.length
a = Listing.search(params[:query])
Listing.search(params[:query])
Listing.search(params[:query]).map(&:title)
Listing.search(params[:query], {fields: [:title]}).map(&:title)
Listing.search(params[:query], {fields: [:title],limit: 10}).map(&:title)
Listing.search(params[:query], {fields: [:title],limit: 10,misspellings: {below: 5}}).map(&:title)
Listing.search(params[:query], {fields: [:title],limit: 10,load: false,misspellings: {below: 5}}).map(&:title)
    }).map(&:title)
      misspellings: {below: 5}
      load: false,
      limit: 10,
      fields: [:title],
Listing.search(params[:query], {
params[:query]
c
params[:search]
params[:q]
c
listing.reservations.
c
Reservation.first
Reservation.all.length
Reservation.all
Listing.all
Listing.all.count
Listing.all
Listing.all.first
Listing.all.second
Listing.all
Listing.find(2)
Listing.find(2).reservations
listing.reservations
listing.reservations = []
listing.reservations.all.length
listing.reservations.all
listing.reservations
listing.resravations
listing.resrvations
listing
self
listing.reservations.class
listing.reservations
listing
listing.reservations.count
listing.reservations
c
 ReservationMailer.reservation_email(@user).deliver_later
n
c
@reservation.errors
@reservation.errors.full_messages
c
@reservation.errors.full_messages
@reservation.errors.full_meessages
@reservation.errors
c
@reservation.errors.full_messages
@reservation.errors
c
User.last.profile_image
@user.save!
@user.profile_image
user_params["profile_image"]
user_params
User.last.profile_image
@user.profile_image
c
@user.profile_image.url
@user.profile_image
User.last.profile_image
User.last.profile_image.url
ProfileImageUploader.all
ProfileImageUploader
User.last.profile_image_url
User.last.profile_image
User.last.profile_image_url
User.last.update(profile_image: params["profile_image"])
User.last.profile_image_url
@user.save
a.profile_image_url
a = User.last
User.last.profile_image_url
@user.profile_image_url
@user == User.last
User.last
User.last.profile_image_url
User.last
@user.profile_image_url
c
@user.profile_image_url
c
@user
@user.profile_image_url
@user.profile_image
@user.profile_image_url
@user
@user.profile_image
@user.profile_image_url
@user
c
@user.profile_image_url
c
@user.profile_image_url
c
@user.profile_image_url
@user.update(user_params)
user_params
c
@user.profile_image_url
@user
c
@user.profile_image_url
user_params["profile_image"]
@user
@user.update(profile_image: user_params["profile_image"])
@user
@user.update(user_params)
user_params
c
user_params
c
params.require(:user).permit(:firstname, :lastname, :email, :password, :birthday, :profile_image)
params.require(:user).permit(:firstname, :lastname, :email, :password, :birthday, {:profile_image => []})
params.require(:user).permit(:firstname, :lastname, :email, :password, :birthday, profile_image:[])
params.require(:user).permit(:firstname, :lastname, :email, :password, :birthday, {profile_image:[]})
user_params
params["user"]
params["firstname"]
params["birthday"]
params["birthday']
params
c
params["user"]["profile_image"]
params["user"]
user_params
user.params
params
c
params
c
user_params
params
c
params.permit(:min, :max).reject { |x, y| y.empty? }
params.permit(:min, :max).reject { |x| x.empty? }
filter_params
c
filter_params.reject(&String.empty?)
filter_params.reject(&empty?)
filter_params.reject(&:empty?)
filter_params.reject{|x| !x.empty? }
filter_params.reject{|x| x.empty? }
filter_params.reject
filter_params.present?
filter_params.present
filter_params.any?
filter_params
fitler_params
filter_params.map(&:empty?)
filter_params.map(&:empty?).class
filter_params.reject(&:empty?).present
filter_params.reject(&:empty?).any?
filter_params.map(&:empty?)
filter_params.reject(&:empty?)
filter_params.map(&:empty?)
filter_params.present?
filter_params.any?
filter_params
c
filter_params [:min].present?
c
"".present?
